Galosis Field的四则运算
一、 相关概念
	1. 域
		一组元素的集合，以及在集合上的四则运算，构成一个域。其中加法和乘法必须满足交换、结合和分配的规律。加法和乘法具有封闭性，即加法和乘法结果仍然是域中的元素。
	2. 有限域
		仅含有限个多个元素的域。又称伽罗华域(Galosis Field)。
	3. 单位元(e)
		e*a = a*e = a
	4. 逆元
	5. 本原多项式(最小多项式)
		特殊的不可约多项式。本原多项式不能再分解因式。

二、 多项式计算
	GF(2^w)的多项式计算里，多项式的系数只能是0或1。系数相加即为进行异或操作，也就是说GF(2^w)的减法等于加法。
	1. 多项式加减法
		(x^2 + x) + (x^3 + x) = x^3 + x^2
	2. 多项式乘法
		(x^2 + x) * (x + 1) = x^2 * (x + 1) + x * (x + 1） = x^3 + x^2 + x^2 + x
	3. 多项式除法
		使用长除法，同普通的多项式除法。

三、 伽罗华域(Galosis Field)
	1. GF(p)
		GF(p)里的加减乘除运算与一般的加减乘除类似，最后只需mod p即可。因为GF(p)里的运算必须满足封闭性，运算结果也必须是GF(p)的域中。
		只有当p为素数时，才能保证除0外的所有元素都有乘法逆元。如GF(10)中的单位元为1，在GF(10)里找不到任何一个元素有(2*a) mod 10 = 1，即2没有逆元。
	2. GF(2^w)
		GF(2^w)上的加法运算和乘法运算不使用一般的加法和乘法，而是使用多项式的运算。

四、 本原多项式
	伽罗华域的元素可以通过该域上的本原多项式生成。通过本原多项式得到的域，其加法单位元都是  0 ，乘法单位元是1。
	在多项式除法中，有r(x) = q(x)t(x) + s(x)，其中r(x),q(x),t(x),s(x)均为GF(2^w)上的多项式。易知r(x) mod q(x) = s(x)，显然dim(s(x)) < dim(q(x))。
	令q(x)是在GF(2^w)上对应的本原多项式。则GF(2^w)的元素的生成过程：
	1. 给定一个初始集合{0, 1, x};
	2. 将这个集合的最后一个元素乘以x。如果得到的结果的度/维数(dim) ≥ w，则将结果 mod q(x)，将结果加入集合中;
	3. 重复2，直到集合中有2^w个元素。此时最后的一个元素乘以x再 mod q(x)的值为1.

	例如：w = 2时，q(x) = x^2 + x + 1.初始集合为{0, 1, x}，最后一个元素为x，乘以x为x^2，dim(x^2) = 2，因此要对q(x)取模，得(x^2) mod (x^2 + x + 1) = x + 1;此时集合更新为{0, 1, x, x+1};再将最后一个元素乘以x，为x^2 + x,仍需要对q(x)取模，得(x^2 + x) mod (x^2 + x + 1) = 1,结束上述过程。即GF(4) = {0, 1, x, x+1}。

	也就是说，只需要找到对应GF(2^w)上的本原多项式q(x)即可通过x代换得到GF(2^w)，即：
	GF(2^w) = GF(2)[x]/q(x)

	常用的本原多项式有：
	w = 4:   x^4 + x + 1
	w = 8:   x^8 + x^4 + x^3 + x^2 + 1
	w = 16:  x^16 + x^12 + x^3 + x + 1
	w = 32:  x^32 + x^22 + x^2 + x + 1
	w = 64:  x^64 + x^4 + x^3 + x + 1

	例如，GF(2^4)的元素生成：
	生成元素		多项式表示			二进制表示		数值表示
	0			0					0000			0
	x^0			x^0					0001			1
	x^1			x^1					0010			2
	x^2			x^2					0100			4
	x^3			x^3					1000			8
	x^4			x + 1				0011			3
	x^5			x^2 + x				0110			6
	x^6			x^3 + x^2			1100			12
	x^7			x^3 + x + 1			1011			11
	x^8			x^2 + 1				0101			5
	x^9			x^3 + x				1010			10
	x^10		x^2 + x + 1			0111			7
	x^11		x^3 + x^2 + x		1110			14
	x^12		x^3 + x^2 + x + 1	1111			15
	x^13		x^3 + x^2 + 1		1101			13
	x^14		x^3 + 1				1001			9
	x^15		1					0001			1

	由上述计算过程，可以得到两个表（反表和正表）：
	i			0	1	2	3	4	5	6	7	8	9	10	11	12	13	14	15
	gflog[i]	-	0	1	4	2	8	5	10	3	14	9	7	6	13	11	12
	gfilog[i]	1	2	4	8	3	6	12	11	5	10	7	14	15	13	9	-

	其中，gflog[i]表（反表）是将二进制映射成多项式，例如将5映射成多项式，即gflog[5] = 8,即x^8 = 5;gfilog[i]表（正表）是将多项式映射成二进制(值),例如将5(即x^5)映射成值，即gfilog[5] = 6,即x^5 = 6.

	基于上述两个表，我们就可以对乘法和除法直接进行查表计算。对于x^k = n，若已知k即可求n，已知n即可求k。

	因此，对于乘法和除法，可以用以下方式进行：
	a = x^m, b = x^n; 则a*b = x^(m + n), a/b = x^(m - n).
	即：先将a，b查找反表（gflog[i]）得到m，n；计算m + n或者m - n，然后基于结果查找正表（gfilog[i]）得到乘法和除法的结果。

	需要注意的是，在计算m + n和m - n时，若结果大于等于15或小于0，则需要对15(2^w - 1)取模。因为0是单独存在的，在GF(2^w)中没有哪个元素的任意次方等于0.

	例如：
	7 * 9 = gfilog[gflog[7] + gflog[9]] = gfilog[10 + 14] = gfilog[9] = 10
	(7 * 9 =(查反表) x^10 * x^14 = x^(10 + 14) = x^(24 mod 15) = x^9 =(查正表) 10)
	13 / 11 = gfilog[gflog[13] - gflog[11]] =  gfilog[13 - 7] = gfilog[6] = 12
	(13 / 11 =(查反表) x^13 / x^7 = x^(13 - 7) = x^6 =(查正表) 12)

	因此，同理可以由GF(2^w)的本原多项式得到GF(2^w)上的所有元素，根据GF(2^w)中的所有元素即可构造大小为2^w - 1的正表和反表，从而简化乘法和除法运算。